{
  "answers": [
    "function(console) {\n\tvar names = [\"Ben\", \"Jafar\", \"Matt\", \"Priya\", \"Brian\"],\n\t\tcounter;\n\n\tfor(counter = 0; counter < names.length; counter++) {\n\t\tconsole.log(names[counter]);\n\t}\n}\n\t\t",
    "function(console) {\n\tvar names = [\"Ben\", \"Jafar\", \"Matt\", \"Priya\", \"Brian\"];\n\n\tnames.forEach(function(name) {\n\t\tconsole.log(name);\n\t});\n}\n\t\t",
    "function() {\n\tvar newReleases = [\n\t\t\t{\n\t\t\t\t\"id\": 70111470,\n\t\t\t\t\"title\": \"Die Hard\",\n\t\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/DieHard.jpg\",\n\t\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\"rating\": [4.0],\n\t\t\t\t\"bookmark\": []\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": 654356453,\n\t\t\t\t\"title\": \"Bad Boys\",\n\t\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/BadBoys.jpg\",\n\t\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\"rating\": [5.0],\n\t\t\t\t\"bookmark\": [{ id: 432534, time: 65876586 }]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": 65432445,\n\t\t\t\t\"title\": \"The Chamber\",\n\t\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/TheChamber.jpg\",\n\t\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\"rating\": [4.0],\n\t\t\t\t\"bookmark\": []\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": 675465,\n\t\t\t\t\"title\": \"Fracture\",\n\t\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/Fracture.jpg\",\n\t\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\"rating\": [5.0],\n\t\t\t\t\"bookmark\": [{ id: 432534, time: 65876586 }]\n\t\t\t}\n\t\t],\n\t\tvideoAndTitlePairs = [];\n\n\tnewReleases.forEach(function(video) {\n\t\tvideoAndTitlePairs.push({ id: video.id, title: video.title });\n\t});\n\n\treturn videoAndTitlePairs;\n}\n\t\t",
    "Array.prototype.map = function(projectionFunction) {\n\tvar results = [];\n\tthis.forEach(function(itemInArray) {\n\n\t\t// ------------ INSERT CODE HERE! ----------------------------\n\t\t// Apply the projectionFunction to each item in the array and add\n\t\t// each result to the results array.\n\t\t// Note: you can add items to an array with the push() method.\n\t\t// ------------ INSERT CODE HERE! ----------------------------\n    \n    results.push(projectionFunction(itemInArray))\n\n\t});\n\n\treturn results;\n};\n\n// JSON.stringify([1,2,3].map(function(x) { return x + 1; })) === '[2,3,4]'\n\t\t",
    "function() {\n\tvar newReleases = [\n\t\t{\n\t\t\t\"id\": 70111470,\n\t\t\t\"title\": \"Die Hard\",\n\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/DieHard.jpg\",\n\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\"rating\": [4.0],\n\t\t\t\"bookmark\": []\n\t\t},\n\t\t{\n\t\t\t\"id\": 654356453,\n\t\t\t\"title\": \"Bad Boys\",\n\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/BadBoys.jpg\",\n\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\"rating\": [5.0],\n\t\t\t\"bookmark\": [{ id: 432534, time: 65876586 }]\n\t\t},\n\t\t{\n\t\t\t\"id\": 65432445,\n\t\t\t\"title\": \"The Chamber\",\n\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/TheChamber.jpg\",\n\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\"rating\": [4.0],\n\t\t\t\"bookmark\": []\n\t\t},\n\t\t{\n\t\t\t\"id\": 675465,\n\t\t\t\"title\": \"Fracture\",\n\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/Fracture.jpg\",\n\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\"rating\": [5.0],\n\t\t\t\"bookmark\": [{ id: 432534, time: 65876586 }]\n\t\t}\n\t];\n\n\t// ------------ INSERT CODE HERE! -----------------------------------\n\t// Use map function to accumulate {id, title} pairs from each video.\n  return newReleases.map(function(newRelease) {\n    return {id: newRelease.id, title: newRelease.title}\n  }) // finish this expression!\n\t// ------------ INSERT CODE HERE! -----------------------------------\n\n}\n\t\t",
    "function() {\n\tvar newReleases = [\n\t\t{\n\t\t\t\"id\": 70111470,\n\t\t\t\"title\": \"Die Hard\",\n\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/DieHard.jpg\",\n\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\"rating\": 4.0,\n\t\t\t\"bookmark\": []\n\t\t},\n\t\t{\n\t\t\t\"id\": 654356453,\n\t\t\t\"title\": \"Bad Boys\",\n\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/BadBoys.jpg\",\n\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\"rating\": 5.0,\n\t\t\t\"bookmark\": [{ id: 432534, time: 65876586 }]\n\t\t},\n\t\t{\n\t\t\t\"id\": 65432445,\n\t\t\t\"title\": \"The Chamber\",\n\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/TheChamber.jpg\",\n\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\"rating\": 4.0,\n\t\t\t\"bookmark\": []\n\t\t},\n\t\t{\n\t\t\t\"id\": 675465,\n\t\t\t\"title\": \"Fracture\",\n\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/Fracture.jpg\",\n\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\"rating\": 5.0,\n\t\t\t\"bookmark\": [{ id: 432534, time: 65876586 }]\n\t\t}\n\t],\n\tvideos = [];\n\n\t// ------------ INSERT CODE HERE! -----------------------------------\n\t// Use forEach function to accumulate every video with a rating of 5.0\n\t// ------------ INSERT CODE HERE! -----------------------------------\n  \n  newReleases.forEach(function(video) {\n    if (video.rating === 5.0) {\n      videos.push(video)\n    }\n  })\n\n\treturn videos;\n}\n\t\t",
    "Array.prototype.filter = function(predicateFunction) {\n\tvar results = [];\n\tthis.forEach(function(itemInArray) {\n\t\t// ------------ INSERT CODE HERE! ----------------------------\n\t\t// Apply the predicateFunction to each item in the array.\n\t\t// If the result is truthy, add the item to the results array.\n\t\t// Note: remember you can add items to the array using the array's\n\t\t// push() method.\n\t\t// ------------ INSERT CODE HERE! ----------------------------\n    if (predicateFunction(itemInArray)) {\n      results.push(itemInArray)\n    }\n\t});\n\n\treturn results;\n};\n\n// JSON.stringify([1,2,3].filter(function(x) { return x > 2})) === \"[3]\"\n\t\t",
    "function() {\n\tvar newReleases = [\n\t\t\t{\n\t\t\t\t\"id\": 70111470,\n\t\t\t\t\"title\": \"Die Hard\",\n\t\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/DieHard.jpg\",\n\t\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\"rating\": 4.0,\n\t\t\t\t\"bookmark\": []\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": 654356453,\n\t\t\t\t\"title\": \"Bad Boys\",\n\t\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/BadBoys.jpg\",\n\t\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\"rating\": 5.0,\n\t\t\t\t\"bookmark\": [{ id: 432534, time: 65876586 }]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": 65432445,\n\t\t\t\t\"title\": \"The Chamber\",\n\t\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/TheChamber.jpg\",\n\t\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\"rating\": 4.0,\n\t\t\t\t\"bookmark\": []\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": 675465,\n\t\t\t\t\"title\": \"Fracture\",\n\t\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/Fracture.jpg\",\n\t\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\"rating\": 5.0,\n\t\t\t\t\"bookmark\": [{ id: 432534, time: 65876586 }]\n\t\t\t}\n\t\t];\n\n\treturn newReleases.\n\t\tfilter(function(video) {\n\t\t\treturn video.rating === 5.0;\n\t\t}).\n\t\tmap(function(video) {\n\t\t\treturn video.id;\n\t\t});\n}\n\t\t",
    "function() {\n\tvar movieLists = [\n\t\t\t{\n\t\t\t\tname: \"New Releases\",\n\t\t\t\tvideos: [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 70111470,\n\t\t\t\t\t\t\"title\": \"Die Hard\",\n\t\t\t\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/DieHard.jpg\",\n\t\t\t\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\t\t\"rating\": 4.0,\n\t\t\t\t\t\t\"bookmark\": []\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 654356453,\n\t\t\t\t\t\t\"title\": \"Bad Boys\",\n\t\t\t\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/BadBoys.jpg\",\n\t\t\t\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\t\t\"rating\": 5.0,\n\t\t\t\t\t\t\"bookmark\": [{ id: 432534, time: 65876586 }]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Dramas\",\n\t\t\t\tvideos: [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 65432445,\n\t\t\t\t\t\t\"title\": \"The Chamber\",\n\t\t\t\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/TheChamber.jpg\",\n\t\t\t\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\t\t\"rating\": 4.0,\n\t\t\t\t\t\t\"bookmark\": []\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 675465,\n\t\t\t\t\t\t\"title\": \"Fracture\",\n\t\t\t\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/Fracture.jpg\",\n\t\t\t\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\t\t\"rating\": 5.0,\n\t\t\t\t\t\t\"bookmark\": [{ id: 432534, time: 65876586 }]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\tallVideoIdsInMovieLists = [];\n\n\tmovieLists.forEach(function(movieList) {\n\t\tmovieList.videos.forEach(function(video) {\n\t\t\tallVideoIdsInMovieLists.push(video.id);\n\t\t});\n\t});\n\n\treturn allVideoIdsInMovieLists;\n\n}\n\t\t",
    "Array.prototype.concatAll = function() {\n\tvar results = [];\n\tthis.forEach(function(subArray) {\n\t\tresults.push.apply(results, subArray);\n\t});\n\n\treturn results;\n};\n\n// JSON.stringify([ [1,2,3], [4,5,6], [7,8,9] ].concatAll()) === \"[1,2,3,4,5,6,7,8,9]\"\n// [1,2,3].concatAll(); // throws an error because this is a one-dimensional array\n\t\t",
    "function() {\n\tvar movieLists = [\n\t\t\t{\n\t\t\t\tname: \"New Releases\",\n\t\t\t\tvideos: [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 70111470,\n\t\t\t\t\t\t\"title\": \"Die Hard\",\n\t\t\t\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/DieHard.jpg\",\n\t\t\t\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\t\t\"rating\": 4.0,\n\t\t\t\t\t\t\"bookmark\": []\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 654356453,\n\t\t\t\t\t\t\"title\": \"Bad Boys\",\n\t\t\t\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/BadBoys.jpg\",\n\t\t\t\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\t\t\"rating\": 5.0,\n\t\t\t\t\t\t\"bookmark\": [{ id: 432534, time: 65876586 }]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Dramas\",\n\t\t\t\tvideos: [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 65432445,\n\t\t\t\t\t\t\"title\": \"The Chamber\",\n\t\t\t\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/TheChamber.jpg\",\n\t\t\t\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\t\t\"rating\": 4.0,\n\t\t\t\t\t\t\"bookmark\": []\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 675465,\n\t\t\t\t\t\t\"title\": \"Fracture\",\n\t\t\t\t\t\t\"boxart\": \"http://cdn-0.nflximg.com/images/2891/Fracture.jpg\",\n\t\t\t\t\t\t\"uri\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\t\t\"rating\": 5.0,\n\t\t\t\t\t\t\"bookmark\": [{ id: 432534, time: 65876586 }]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t];\n\n\t// ------------   INSERT CODE HERE!  -----------------------------------\n\t// Use map and concatAll to flatten the movieLists in a list of video ids.\n\t// ------------   INSERT CODE HERE!  -----------------------------------\n\n  return movieLists.map(function(movieList) {\n    return movieList.videos.map(function(v) {return v.id})\n  })\n  .concatAll()// Complete this expression!\n\n}\n\t\t",
    "function() {\n\tvar movieLists = [\n\t\t\t{\n\t\t\t\tname: \"Instant Queue\",\n\t\t\t\tvideos : [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 70111470,\n\t\t\t\t\t\t\"title\": \"Die Hard\",\n\t\t\t\t\t\t\"boxarts\": [\n\t\t\t\t\t\t\t{ width: 150, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/DieHard150.jpg\" },\n\t\t\t\t\t\t\t{ width: 200, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/DieHard200.jpg\" }\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"url\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\t\t\"rating\": 4.0,\n\t\t\t\t\t\t\"bookmark\": []\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 654356453,\n\t\t\t\t\t\t\"title\": \"Bad Boys\",\n\t\t\t\t\t\t\"boxarts\": [\n\t\t\t\t\t\t\t{ width: 200, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/BadBoys200.jpg\" },\n\t\t\t\t\t\t\t{ width: 150, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/BadBoys150.jpg\" }\n\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"url\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\t\t\"rating\": 5.0,\n\t\t\t\t\t\t\"bookmark\": [{ id: 432534, time: 65876586 }]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"New Releases\",\n\t\t\t\tvideos: [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 65432445,\n\t\t\t\t\t\t\"title\": \"The Chamber\",\n\t\t\t\t\t\t\"boxarts\": [\n\t\t\t\t\t\t\t{ width: 150, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/TheChamber150.jpg\" },\n\t\t\t\t\t\t\t{ width: 200, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/TheChamber200.jpg\" }\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"url\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\t\t\"rating\": 4.0,\n\t\t\t\t\t\t\"bookmark\": []\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 675465,\n\t\t\t\t\t\t\"title\": \"Fracture\",\n\t\t\t\t\t\t\"boxarts\": [\n\t\t\t\t\t\t\t{ width: 200, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/Fracture200.jpg\" },\n\t\t\t\t\t\t\t{ width: 150, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/Fracture150.jpg\" },\n\t\t\t\t\t\t\t{ width: 300, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/Fracture300.jpg\" }\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"url\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\t\t\"rating\": 5.0,\n\t\t\t\t\t\t\"bookmark\": [{ id: 432534, time: 65876586 }]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t];\n\n  return movieLists.map(function(movieList) {\n    return movieList.videos.map(function(video) {\n      return video.boxarts.filter(function(boxart) {\n        return boxart.width === 150 && boxart.height === 200\n      })\n        .map(function(boxart) {\n          return {id: video.id, title: video.title, boxart: boxart.url}\n        })\n    })\n      .concatAll()\n  })\n  \t.concatAll()\n}\n\t\t",
    "Array.prototype.concatMap = function(projectionFunctionThatReturnsArray) {\n\treturn this.\n\t\tmap(function(item) {\n\t\t\treturn projectionFunctionThatReturnsArray(item);\n\t\t}).\n\t\t// apply the concatAll function to flatten the two-dimensional array\n\t\tconcatAll();\n};\n\n/*\n\tvar spanishFrenchEnglishWords = [ [\"cero\",\"rien\",\"zero\"], [\"uno\",\"un\",\"one\"], [\"dos\",\"deux\",\"two\"] ];\n\t// collect all the words for each number, in every language, in a single, flat list\n\tvar allWords = [0,1,2].\n\t\tconcatMap(function(index) {\n\t\t\treturn spanishFrenchEnglishWords[index];\n\t\t});\n\n\treturn JSON.stringify(allWords) === '[\"cero\",\"rien\",\"zero\",\"uno\",\"un\",\"one\",\"dos\",\"deux\",\"two\"]';\n*/\n\t\t",
    "function() {\n\tvar movieLists = [\n\t\t\t{\n\t\t\t\tname: \"Instant Queue\",\n\t\t\t\tvideos : [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 70111470,\n\t\t\t\t\t\t\"title\": \"Die Hard\",\n\t\t\t\t\t\t\"boxarts\": [\n\t\t\t\t\t\t\t{ width: 150, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/DieHard150.jpg\" },\n\t\t\t\t\t\t\t{ width: 200, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/DieHard200.jpg\" }\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"url\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\t\t\"rating\": 4.0,\n\t\t\t\t\t\t\"bookmark\": []\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 654356453,\n\t\t\t\t\t\t\"title\": \"Bad Boys\",\n\t\t\t\t\t\t\"boxarts\": [\n\t\t\t\t\t\t\t{ width: 200, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/BadBoys200.jpg\" },\n\t\t\t\t\t\t\t{ width: 150, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/BadBoys150.jpg\" }\n\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"url\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\t\t\"rating\": 5.0,\n\t\t\t\t\t\t\"bookmark\": [{ id: 432534, time: 65876586 }]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"New Releases\",\n\t\t\t\tvideos: [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 65432445,\n\t\t\t\t\t\t\"title\": \"The Chamber\",\n\t\t\t\t\t\t\"boxarts\": [\n\t\t\t\t\t\t\t{ width: 150, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/TheChamber150.jpg\" },\n\t\t\t\t\t\t\t{ width: 200, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/TheChamber200.jpg\" }\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"url\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\t\t\"rating\": 4.0,\n\t\t\t\t\t\t\"bookmark\": []\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 675465,\n\t\t\t\t\t\t\"title\": \"Fracture\",\n\t\t\t\t\t\t\"boxarts\": [\n\t\t\t\t\t\t\t{ width: 200, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/Fracture200.jpg\" },\n\t\t\t\t\t\t\t{ width: 150, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/Fracture150.jpg\" },\n\t\t\t\t\t\t\t{ width: 300, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/Fracture300.jpg\" }\n\t\t\t\t\t\t],\n\t\t\t\t\t\t\"url\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\t\t\"rating\": 5.0,\n\t\t\t\t\t\t\"bookmark\": [{ id: 432534, time: 65876586 }]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t];\n\n\n\t// Use one or more concatMap, map, and filter calls to create an array with the following items\n\t// [\n\t//\t {\"id\": 675465, \"title\": \"Fracture\", \"boxart\": \"http://cdn-0.nflximg.com/images/2891/Fracture150.jpg\" },\n\t//\t {\"id\": 65432445, \"title\": \"The Chamber\", \"boxart\": \"http://cdn-0.nflximg.com/images/2891/TheChamber150.jpg\" },\n\t//\t {\"id\": 654356453, \"title\": \"Bad Boys\", \"boxart\": \"http://cdn-0.nflximg.com/images/2891/BadBoys150.jpg\" },\n\t//\t {\"id\": 70111470, \"title\": \"Die Hard\", \"boxart\": \"http://cdn-0.nflximg.com/images/2891/DieHard150.jpg\" }\n\t// ];\n\n\treturn movieLists // Complete this expression!\n    .concatMap(function(list) {\n      return list.videos.concatMap(function(video) {\n        return video.boxarts.filter(function(boxart) { return boxart.width === 150 && boxart.height === 200})\n          .map(function(boxart) { return {id: video.id, title: video.title, boxart: boxart.url} })\n      })\n    })\n\n}\n\t\t",
    "function() {\n\tvar boxarts = [\n\t\t\t{ width: 200, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/Fracture200.jpg\" },\n\t\t\t{ width: 150, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/Fracture150.jpg\" },\n\t\t\t{ width: 300, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/Fracture300.jpg\" },\n\t\t\t{ width: 425, height: 150, url: \"http://cdn-0.nflximg.com/images/2891/Fracture425.jpg\" }\n\t\t],\n\t\tcurrentSize,\n\t\tmaxSize = -1,\n\t\tlargestBoxart;\n\n\tboxarts.forEach(function(boxart) {\n\t\tcurrentSize = boxart.width * boxart.height;\n\t\tif (currentSize > maxSize) {\n\t\t\tlargestBoxart = boxart;\n\t\t\tmaxSize = currentSize;\n\t\t}\n\t});\n\n\treturn largestBoxart;\n}\n\t\t",
    "// [1,2,3].reduce(function(accumulatedValue, currentValue) { return accumulatedValue + currentValue; }); === [6];\n// [1,2,3].reduce(function(accumulatedValue, currentValue) { return accumulatedValue + currentValue; }, 10); === [16];\n\nArray.prototype.reduce = function(combiner, initialValue) {\n\tvar counter,\n\t\taccumulatedValue;\n\n\t// If the array is empty, do nothing\n\tif (this.length === 0) {\n\t\treturn this;\n\t}\n\telse {\n\t\t// If the user didn't pass an initial value, use the first item.\n\t\tif (arguments.length === 1) {\n\t\t\tcounter = 1;\n\t\t\taccumulatedValue = this[0];\n\t\t}\n\t\telse if (arguments.length >= 2) {\n\t\t\tcounter = 0;\n\t\t\taccumulatedValue = initialValue;\n\t\t}\n\t\telse {\n\t\t\tthrow \"Invalid arguments.\";\n\t\t}\n\n\t\t// Loop through the array, feeding the current value and the result of\n\t\t// the previous computation back into the combiner function until\n\t\t// we've exhausted the entire array and are left with only one value.\n\t\twhile(counter < this.length) {\n\t\t\taccumulatedValue = combiner(accumulatedValue, this[counter])\n\t\t\tcounter++;\n\t\t}\n\n\t\treturn [accumulatedValue];\n\t}\n};\n\t\t",
    "function() {\n\tvar ratings = [2,3,1,4,5];\n\n\t// You should return an array containing only the largest rating. Remember that reduce always\n\t// returns an array with one item.\n\treturn ratings.\n    reduce(function(acc, cur) {\n      return cur > acc ? cur : acc;\n    })   // Complete this expression\n}\n\t\t",
    "function() {\n\tvar boxarts = [\n\t\t\t{ width: 200, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/Fracture200.jpg\" },\n\t\t\t{ width: 150, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/Fracture150.jpg\" },\n\t\t\t{ width: 300, height: 200, url: \"http://cdn-0.nflximg.com/images/2891/Fracture300.jpg\" },\n\t\t\t{ width: 425, height: 150, url: \"http://cdn-0.nflximg.com/images/2891/Fracture425.jpg\" }\n\t\t];\n\n\t// You should return an array containing only the URL of the largest box art. Remember that reduce always\n\t// returns an array with one item.\n\treturn boxarts.\n    reduce(function(acc, cur) {\n      return cur.width * cur.height > acc.width * acc.height ? cur : acc\n    })\n    .map(function(boxart) {\n    \t\treturn boxart.url\n    })\n}\n\t\t",
    "function() {\n\tvar videos = [\n\t\t{\n\t\t\t\"id\": 65432445,\n\t\t\t\"title\": \"The Chamber\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 675465,\n\t\t\t\"title\": \"Fracture\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 70111470,\n\t\t\t\"title\": \"Die Hard\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 654356453,\n\t\t\t\"title\": \"Bad Boys\"\n\t\t}\n\t];\n\n\t// Expecting this output...\n\t// [\n\t//\t {\n\t//\t\t \"65432445\": \"The Chamber\",\n\t//\t\t \"675465\": \"Fracture\",\n\t//\t\t \"70111470\": \"Die Hard\",\n\t//\t\t \"654356453\": \"Bad Boys\"\n\t//\t }\n\t// ]\n\treturn videos.\n\t\treduce(function(accumulatedMap, video) {\n\t\tvar obj = {};\n\n\t\t// ----- INSERT CODE TO ADD THE VIDEO TITLE TO THE ----\n\t\t// ----- NEW MAP USING THE VIDEO ID AS THE KEY\t ----\n      \n      obj[video.id] = video.title\n\n\t\t// Object.assign() takes all of the enumerable properties from\n\t\t// the object listed in its second argument (obj) and assigns them\n\t\t// to the object listed in its first argument (accumulatedMap).\n\t\treturn Object.assign(accumulatedMap, obj);\n\t\t},\n\t\t// Use an empty map as the initial value instead of the first item in\n\t\t// the list.\n\t\t{});\n}\n\t\t",
    "function() {\n\tvar movieLists = [\n\t\t{\n\t\t\tname: \"New Releases\",\n\t\t\tvideos: [\n\t\t\t\t{\n\t\t\t\t\t\"id\": 70111470,\n\t\t\t\t\t\"title\": \"Die Hard\",\n\t\t\t\t\t\"boxarts\": [\n\t\t\t\t\t\t{ width: 150, height:200, url:\"http://cdn-0.nflximg.com/images/2891/DieHard150.jpg\" },\n\t\t\t\t\t\t{ width: 200, height:200, url:\"http://cdn-0.nflximg.com/images/2891/DieHard200.jpg\" }\n\t\t\t\t\t],\n\t\t\t\t\t\"url\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\t\"rating\": 4.0,\n\t\t\t\t\t\"bookmark\": []\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": 654356453,\n\t\t\t\t\t\"title\": \"Bad Boys\",\n\t\t\t\t\t\"boxarts\": [\n\t\t\t\t\t\t{ width: 200, height:200, url:\"http://cdn-0.nflximg.com/images/2891/BadBoys200.jpg\" },\n\t\t\t\t\t\t{ width: 140, height:200, url:\"http://cdn-0.nflximg.com/images/2891/BadBoys140.jpg\" }\n\n\t\t\t\t\t],\n\t\t\t\t\t\"url\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\t\"rating\": 5.0,\n\t\t\t\t\t\"bookmark\": [{ id:432534, time:65876586 }]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tname: \"Thrillers\",\n\t\t\tvideos: [\n\t\t\t\t{\n\t\t\t\t\t\"id\": 65432445,\n\t\t\t\t\t\"title\": \"The Chamber\",\n\t\t\t\t\t\"boxarts\": [\n\t\t\t\t\t\t{ width: 130, height:200, url:\"http://cdn-0.nflximg.com/images/2891/TheChamber130.jpg\" },\n\t\t\t\t\t\t{ width: 200, height:200, url:\"http://cdn-0.nflximg.com/images/2891/TheChamber200.jpg\" }\n\t\t\t\t\t],\n\t\t\t\t\t\"url\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\t\"rating\": 4.0,\n\t\t\t\t\t\"bookmark\": []\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": 675465,\n\t\t\t\t\t\"title\": \"Fracture\",\n\t\t\t\t\t\"boxarts\": [\n\t\t\t\t\t\t{ width: 200, height:200, url:\"http://cdn-0.nflximg.com/images/2891/Fracture200.jpg\" },\n\t\t\t\t\t\t{ width: 120, height:200, url:\"http://cdn-0.nflximg.com/images/2891/Fracture120.jpg\" },\n\t\t\t\t\t\t{ width: 300, height:200, url:\"http://cdn-0.nflximg.com/images/2891/Fracture300.jpg\" }\n\t\t\t\t\t],\n\t\t\t\t\t\"url\": \"http://api.netflix.com/catalog/titles/movies/70111470\",\n\t\t\t\t\t\"rating\": 5.0,\n\t\t\t\t\t\"bookmark\": [{ id:432534, time:65876586 }]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t];\n\n\n\t// Use one or more concatMap, map, and reduce calls to create an array with the following items (order doesn't matter)\n\t// [\n\t//\t {\"id\": 675465,\"title\": \"Fracture\",\"boxart\":\"http://cdn-0.nflximg.com/images/2891/Fracture120.jpg\" },\n\t//\t {\"id\": 65432445,\"title\": \"The Chamber\",\"boxart\":\"http://cdn-0.nflximg.com/images/2891/TheChamber130.jpg\" },\n\t//\t {\"id\": 654356453,\"title\": \"Bad Boys\",\"boxart\":\"http://cdn-0.nflximg.com/images/2891/BadBoys140.jpg\" },\n\t//\t {\"id\": 70111470,\"title\": \"Die Hard\",\"boxart\":\"http://cdn-0.nflximg.com/images/2891/DieHard150.jpg\" }\n\t// ];\n\n\treturn movieLists.\n\t\tconcatMap(function(movieList) {\n      return movieList.videos.map(function(video) {\n        return {\n          id: video.id,\n          title: video.title,\n          boxart: video.boxarts.reduce(function(acc, cur) {\n            return cur.width * cur.height < acc.width * acc.height ? cur : acc\n          }).reduce(function(acc, cur) {\n            return cur.url\n          })\n        }\n      })\n\t\t})\n\n}\n\t\t"
  ]
}
